{"ast":null,"code":"import _objectSpread from\"/Users/jonathan/Desktop/Github/React-ToDoList/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/jonathan/Desktop/Github/React-ToDoList/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/jonathan/Desktop/Github/React-ToDoList/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import TodoForm from\"./TodoForm\";import{v4 as uuidv4}from'uuid';import Todo from'./Todo';import EditodoForm from\"./EditTodoForm\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";uuidv4();export default function TodoWrapper(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];var addTodo=function addTodo(todo){setTodos([].concat(_toConsumableArray(todos),[{id:uuidv4(),task:todo,completed:false,isEditing:false}]));console.log(todos);};var toggleComplete=function toggleComplete(id){setTodos(todos.map(function(todo){return todo.id===id?_objectSpread(_objectSpread({},todo),{},{completed:!todo.completed}):todo;}));};var deleteTodo=function deleteTodo(id){setTodos(todos.filter(function(todo){return todo.id!==id;}));};var editTodo=function editTodo(id){setTodos(todos.map(function(todo){return todo.id===id?_objectSpread(_objectSpread({},todo),{},{isEditing:!todo.isEditing}):todo;}));};var editTask=function editTask(task,id){setTodos(todos.map(function(todo){return todo.id===id?_objectSpread(_objectSpread({},todo),{},{task:task,isEditing:!todo.isEditing}):todo;}));};return/*#__PURE__*/_jsxs(\"div\",{className:\"TodoWrapper\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"To Do List\"}),/*#__PURE__*/_jsx(TodoForm,{addTodo:addTodo}),todos.map(function(todo,index){return todo.isEditing?/*#__PURE__*/_jsx(EditodoForm,{editTodo:editTask,task:todo}):/*#__PURE__*/_jsx(Todo,{task:todo,toggleComplete:toggleComplete,deleteTodo:deleteTodo,editTodo:editTodo},index);})]});}","map":{"version":3,"names":["React","useState","TodoForm","v4","uuidv4","Todo","EditodoForm","jsx","_jsx","jsxs","_jsxs","TodoWrapper","_useState","_useState2","_slicedToArray","todos","setTodos","addTodo","todo","concat","_toConsumableArray","id","task","completed","isEditing","console","log","toggleComplete","map","_objectSpread","deleteTodo","filter","editTodo","editTask","className","children","index"],"sources":["/Users/jonathan/Desktop/Github/React-ToDoList/src/components/TodoWrapper.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport {v4 as uuidv4} from 'uuid'\nimport Todo from './Todo'\nimport EditodoForm from \"./EditTodoForm\";\nuuidv4()\n\nexport default function TodoWrapper() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    setTodos([...todos, {id: uuidv4(), task: todo, completed: false, \n      isEditing:false}])\n      console.log(todos)\n  }\n\n  const toggleComplete = id => {\n    setTodos(todos.map(todo => todo.id === id ? {...todo, completed:\n       !todo.completed} : todo))\n  }\n\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  const editTodo = id => {\n    setTodos(todos.map(todo => todo.id === id ? {... todo, isEditing:\n       !todo.isEditing} : todo))\n  }\n\n  const editTask = (task, id) => {\n    setTodos(todos.map(todo => todo.id === id ? {... todo, task, isEditing:\n    !todo.isEditing} : todo))\n  }\n  return (\n    <div className=\"TodoWrapper\">\n      <h1>To Do List</h1>\n      <TodoForm addTodo={addTodo}/>\n      {todos.map((todo,index) => (\n        todo.isEditing ? (\n          <EditodoForm editTodo={editTask} task={todo}/>\n        ) : (\n        <Todo task={todo} key={index}\n        toggleComplete={toggleComplete}\n        deleteTodo={deleteTodo} editTodo={editTodo}/>\n        )\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}